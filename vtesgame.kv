#:kivy 1.7.0
#
GameWidget:

<PlayerSelectWidget>:
    input_area: input
    start_button: start
    load_button: load
    Label:
        top: root.height
        center_x: root.width // 2
        text: "Setup the game"
    FloatLayout:
        id: input
        # We'll fill this in dynamically, so we keep references
        # to the text input fields easily
        y: 80
        height: root.height - 160
        width: root.width
    Button:
        id: start
        # Widget subclass, so we fake relative positioning
        size: 0.25 * root.width, 0.05 * root.height
        top: self.height
        x: 0
        text: "Start"
        on_release: root.start()
    Button:
        id: load
        size: 0.25 * root.width, 0.05 * root.height
        top: self.height
        x: 0.4 * root.width
        text: "Load"
        on_release: root.ask_file()
    Button:
        size: 0.25 * root.width, 0.05 * root.height
        top: self.height
        right: root.width
        text: "Exit"
        on_release: app.stop()


<MinionRow@BoxLayout>:
    name: name
    torpor: torpor
    size_hint: 1, 0.03
    Label:
        id: name
        size_hint: 0.4, 1
        text: ''
        pos_hint: {'x': 0, 'top': 0}
    Button:
        size_hint: 0.15, 1
        text: 'Burn'
        pos_hint: {'x': 0.4, 'top': 0}
        on_release: root.burn()
    Button:
        id: torpor
        size_hint: 0.15, 1
        text: 'Topor'
        pos_hint: {'x': 0.55, 'top': 0}
        on_release: root.do_torpor()
    Button:
        size_hint: 0.15, 1
        text: 'Edit'
        pos_hint: {'x': 0.7, 'top': 0}
        on_release: root.edit_minion()
    Button:
        size_hint: 0.15, 1
        text: 'Act'
        pos_hint: {'x': 0.85, 'top': 0}
        on_release: root.ask_action()


<MasterRow@BoxLayout>:
    name: name
    target: target
    size_hint: 1, 0.03
    Label:
        id: name
        size_hint: 0.4, 1
        text: ''
        pos_hint: {'x': 0, 'top': 0}
    Label:
        id: target
        size_hint: 0.3, 1
        text: ''
        pos_hint: {'x': 0.4, 'top': 0}
    Button:
        size_hint: 0.15, 1
        text: 'Edit'
        pos_hint: {'x': 0.7, 'top': 0}
        on_release: root.edit()
    Button:
        size_hint: 0.15, 1
        text: 'Remove'
        pos_hint: {'x': 0.85, 'top': 0}
        on_release: root.remove()


<PlayerScreen@RelativeLayout>:
    game: game
    player: player
    scroll: scroll
    oust_but: oust_but
    BoxLayout:
        id: player
        size: root.width, 0.1 * root.height
        size_hint: None, None
        pos_hint: {'top': 1}
    ScrollView:
        id: scroll
        size: root.width, 0.75 * root.height
        size_hint: None, None
        pos_hint: {'right': 1, 'top': 0.9}
        RelativeLayout:
            id: game
            # We'll fill this in dynamically as cards are played
            size: root.width, 2*root.height
            size_hint: None, None
            Button:
                size_hint: 0.25, 0.02
                pos_hint: {'right': 1, 'top': 1}
                text: "Pool +"
                on_release: root.change_pool(+1)
            Button:
                size_hint: 0.25, 0.02
                pos_hint: {'right': 0.2, 'top': 1}
                text: "Pool -"
                on_release: root.change_pool(-1)
            Button:
                size_hint: 0.25, 0.02
                pos_hint: {'x': 0, 'top': 0.975}
                text: "Add Master"
                on_release: root.ask_master_details()
            Button:
                size_hint: 0.25, 0.02
                pos_hint: {'x': 0.3, 'top': 0.975}
                text: "Add Minion"
                on_release: root.ask_minion_name()
    Button:
        size_hint: 0.25, 0.05
        pos_hint: {'x': 0, 'top': 0.15}
        text: "Prev Player <--"
        on_release: root.change(-1)
    Button:
        size_hint: 0.25, 0.05
        pos_hint: {'right': 1, 'top': 0.15}
        text: "Next Player -->"
        on_release: root.change(+1)
    Button:
        size_hint: 0.18, 0.05
        pos_hint: {'x': 0}
        text: "Next Turn"
        on_release: root.next_turn()
    Button:
        size_hint: 0.18, 0.05
        pos_hint: {'x': 0.2}
        text: 'Rollback'
        on_release: root.rollback()
    Button:
        id: oust_but
        size_hint: 0.18, 0.05
        pos_hint: {'x': 0.41}
        text: "Oust Player"
        on_release: root.oust()
    Button:
        size_hint: 0.18, 0.05
        pos_hint: {'x': 0.61}
        text: "Update Decks"
        on_release: root.update_decks()
    Button:
        size_hint: 0.18, 0.05
        pos_hint: {'right': 1}
        text: "Stop Game"
        on_release: root.stop_game()


<MinionName@Popup>:
    name: name
    size_hint: .6, .25
    auto_dismiss: False
    title: 'Minion Name'
    BoxLayout:
        orientation: 'vertical'
        TextInput:
            id: name
            size_hint: 1, 0.15
        BoxLayout:
            size_hint: 1, 0.1
            Button:
                size_hint: 0.5, 1
                pos_hint: {'top': 1}
                text: 'Done'
                on_release: root.done()
            Button:
                size_hint: 0.5, 1
                pos_hint: {'top': 1}
                text: 'Cancel'
                on_release: root.cancel()


<ActionChoice@Popup>:
    size_hint: .6, .6
    auto_dismiss: False
    title: 'Action'
    BoxLayout:
        orientation: 'vertical'
        Button:
            size_hint: 1, 0.1
            text: 'Bleed'
            on_release: root.action('bleed')
        Button:
            size_hint: 1, 0.1
            text: 'Vote'
            on_release: root.action('vote')
        Button:
            size_hint: 1, 0.1
            text: 'Hunt'
            on_release: root.action('hunt')
        Button:
            size_hint: 1, 0.1
            text: 'Equip / Employ'
            on_release: root.action('equip')
        Button:
            size_hint: 1, 0.1
            text: 'Recruit / Breed'
            on_release: root.action('recruit')
        Button:
            size_hint: 1, 0.1
            text: 'Rush'
            on_release: root.action('rush')
        Button:
            size_hint: 1, 0.1
            text: 'Farm / Bloat'
            on_release: root.action('bloat')
        Button:
            size_hint: 1, 0.1
            text: 'Bloat down'
            on_release: root.action('bloat down')
        Button:
            size_hint: 1, 0.1
            text: 'Other'
            on_release: root.action('other action')

<ActionResult@Popup>:
    size_hint: .3, .3
    auto_dismiss: False
    title: 'Action Result'
    BoxLayout:
        orientation: 'vertical'
        Button:
            size_hint: 1, 0.1
            text: 'Successful'
            on_release: root.resolved('successfully')
        Button:
            size_hint: 1, 0.1
            text: 'Blocked'
            on_release: root.resolved('was blocked')
        Button:
            size_hint: 1, 0.1
            text: 'Unsucessful'
            on_release: root.resolved('unsucessfully')


<EditBoxRow@BoxLayout>:
    action: action
    size_hint: 1, 0.05
    Label:
        id: action
        size_hint: 0.7, 1
        text: ''
    Button:
        size_hint: 0.3, 1
        text: 'Delete'
        on_release: root.delete()


<EditMinion@Popup>:
    name: name
    layout: layout
    size_hint: .8, .8
    auto_dismiss: False
    title: 'Edit Minion'
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            pos_hint: {'x':0, 'y':0.9}
            size_hint: 1, 0.05
            TextInput:
                id: name
                size_hint: 0.6, 1
            Button:
                size_hint: 0.4, 1
                text: 'Rename'
                on_release: root.rename()
        # We shove in a box layout here, so we dynamically  insert widgets in
        # the right place
        BoxLayout:
            id: layout
            orientation: 'vertical'
            size_hint: 1, 0.8
        Button:
            size_hint: 0.5, 0.1
            pos_hint: {'x': 0.25, 'top':0.1}
            text: 'Close'
            on_release: root.dismiss()


<AddMaster@Popup>:
    name: name
    target: target
    size_hint: .6, .6
    auto_dismiss: False
    title: 'Add Master'
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            size_hint: 1, 0.15
            Label:
                text: 'Name:'
                size_hint: 0.3, 1
            TextInput:
                id: name
                size_hint: 0.7, 1
        BoxLayout:
            size_hint: 1, 0.15
            Label:
                text: 'Target:'
                size_hint: 0.3, 1
            TextInput:
                id: target
                size_hint: 0.7, 1
        BoxLayout:
            size_hint: 1, 0.1
            Button:
                size_hint: 0.5, 1
                pos_hint: {'top': 1}
                text: 'Done'
                on_release: root.done()
            Button:
                size_hint: 0.5, 1
                pos_hint: {'top': 1}
                text: 'Cancel'
                on_release: root.cancel()


<LoadDialog@Popup>:
    title: 'Load Exisiting Log'
    BoxLayout:
        orientation: 'vertical'
        FileChooserListView:
            id: filechooser
            path: app.config.get('vtes_report', 'logpath')
            filters: ['*.log']
        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.dismiss()
            Button:
                text: "Load"
                on_release: root.load(filechooser.selection)
